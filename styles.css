/* counter-reset creates a counter that we can increment, decrement and access the value of */
body {
  counter-reset: score;
}

@keyframes slide {
  0% {
    left: 500px;
    top: 50px;
  }
  10% {
    left: 350px;
    top: 60px;
    transform: rotate(45deg);
  }
  20% {
    left: 250px;
    top: 120px;
    transform: rotate(0deg);
  }
  30% {
    left: 350px;
    top: 280px;
    transform: rotate(180deg);
  }
  50% {
    left: 120px;
    top: 260px;
    transform: rotate(360deg);
  }
  60% {
    left: 280px;
    top: 120px;
    transform: rotate(45deg);
  }
  70% {
    left: 400px;
    top: 400px;
    transform: rotate(0deg);
  }
  80% {
    left: 100px;
    top: 240px;
    transform: rotate(93deg);
  }
  90% {
    left: 30px;
    top: 40px;
    transform: rotate(164deg);
  }
  100% {
    left: -50px;
    top: 400px;
  }
}

@keyframes appear {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes disappear {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.wall {
  background-color: #242424;
  width: 100px;
  height: 500px;
  float: left;
  overflow: hidden;
  z-index: 1;
}
.stage {
  background: #e9e9e9;
  height: 500px;
  position: relative;
  width: 500px;
  float: left;
  overflow: hidden;
  z-index: -1;
}

/* You need pointer-events: none to avoid the divs taking click events, preventing you clicking the boxes underneath them. */
.your-score {
  padding-left: 20px;
  animation: disappear 0.5s forwards;
  animation-delay: 12s;
  pointer-events: none;
}

.game-over {
  width: 500px;
  opacity: 0;
  animation: appear 0.5s forwards;
  animation-delay: 12s;
  text-align: center;
  pointer-events: none;
  color: #ff3e41;
}

.target {
  width: 100%;
  height: 100%;
}

/* Checkboxes with labels are used for the targets. */
.stage input[type="checkbox"] {
  height: 0px;
  width: 0px;
  opacity: 0;
  margin: 0;
  padding: 0;
}

li {
  height: 50px;
  position: absolute;
  left: -50px;
  width: 50px;
  animation: slide 8s alternate;
  list-style: none;
  padding: 0;
  margin: 0;
}

label div {
  background-color: #2f4a92;
  height: 100%;
  width: 100%;
  /* transition: background-color 0.5s ease-out; */
  transition: all 1s ease-out;
}

input[type="checkbox"]:checked + label div {
  background-color: #ff3e41;
  filter: opacity(0);
  height: 1px;
}

li:nth-of-type(2) {
  animation-delay: 1.5s;
}

li:nth-of-type(3) {
  animation-delay: 2.3s;
}

li:nth-of-type(4) {
  animation-delay: 3.7s;
}

li:nth-of-type(5) {
  animation-delay: 4.1s;
}

li:nth-of-type(6) {
  animation-delay: 4.9s;
}

/* Increment the counter by 1 for every checkbox which is checked */
input[type="checkbox"]:checked {
  counter-increment: score;
  /* Note: pointer-events: none isn't working here, checkboxes can still be clicked after they're checked. Not sure why. */
  pointer-events: none;
}

/* Insert the counter value after the score h1 element string, which is initially empty. */
.your-score::after {
  content: counter(score);
}

#game-over-score::after {
  content: counter(score);
}
